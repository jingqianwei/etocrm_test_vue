<?php
/**
 * Created by PhpStorm.
 * User: chinwe.jing
 * Date: 2018/8/9
 * Time: 10:40
 */

namespace App\Models;
use Illuminate\Database\Eloquent\Builder;

/**
 * App\Models\Carousel
 *
 * @property int $id
 * @property string $title
 * @property string|null $link
 * @property string $src
 * @property \Carbon\Carbon|null $created_at
 * @property \Carbon\Carbon|null $updated_at
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Carousel whereCreatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Carousel whereId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Carousel whereLink($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Carousel whereSrc($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Carousel whereTitle($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Carousel whereUpdatedAt($value)
 * @mixin \Eloquent
 */
class Carousel extends BaseModel
{
    /**
     * 自定义时间， false：自定义时间， true：程序自动设置时间，默认为true
     * @var bool
     */
    public $timestamps = false;

    protected $fillable = [
        'title',
        'link',
        'src'
    ];

    /**
     * @Describe: 模型的「启动」方法
     * @Author: chinwe.jing
     * @Data: 2018/8/22 14:34
     * @return void
     */
    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        //插入数据之前的准备工作
        static::creating(function($model) {
            //设置为当前时间，格式为 2018-08-22 11:28:45
            $model->created_at = now()->toDateTimeString();
            return true;
        });

        //更新数据之前的准备工作
        static::updating(function($model) {
            //设置为当前时间，格式为 2018-08-22 11:28:45
            $model->updated_at = now()->toDateTimeString();
            return true;
        });

        //匿名的全局作用域, 每个查询都会加这个条件
        static::addGlobalScope('age', function (Builder $builder) {
            $builder->where('age', '>', 200);
        });

        // 全局作用域是闭包的话：
        Carousel::withoutGlobalScope('age')->get();

        // 取消全部作用域
        Carousel::withoutGlobalScopes()->get();

        // 取消个别全局作用域
        Carousel::withoutGlobalScopes([
            Carousel::class, User::class
        ])->get();
    }

    /**
     * 只查询受欢迎的用户.
     *
     * 使用方法 Carousel::popular()->active()->orderBy('created_at')->get();
     * @param \Illuminate\Database\Eloquent\Builder $query
     * @return \Illuminate\Database\Eloquent\Builder
     */
    public function scopePopular($query)
    {
        return $query->where('votes', '>', 100);
    }

    /**
     * 只查询 active 的用户.
     *
     * 使用方法 Carousel::popular()->active()->orderBy('created_at')->get();
     * @param \Illuminate\Database\Eloquent\Builder $query
     * @return \Illuminate\Database\Eloquent\Builder
     */
    public function scopeActive($query)
    {
        return $query->where('active', 1);
    }

    /**
     * 查询只包含特定类型的用户.
     *
     * 使用方法 $users = Carousel::ofType('admin')->get(); //查询为admin的用户
     * @param \Illuminate\Database\Eloquent\Builder $query
     * @param mixed $type
     * @return \Illuminate\Database\Eloquent\Builder
     */
    public function scopeOfType($query, $type)
    {
        return $query->where('type', $type);
    }
}